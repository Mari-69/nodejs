<!DOCTYPE html>
<html>
  <head>
    <title>Login Page</title>
    <style>
        h2{
            display: none;
        }
    </style>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
const form=$("#loginForm");
$(document).ready(function() {
  $("#loginForm").submit((event)=>{
  event.preventDefault();
  var name = $("#username").val();
  var password=$("#pwd").val();
  //generateToken by making a service call to /auth with post
  $.ajax({
    url:"/auth",
    type:"POST",
    contentType:"application/json",
    dataType:"json",
    data: JSON.stringify({
    name: name,
    password: password
    }),
    success: function(data) {
          var tokenData=data;
          if(tokenData.login==true){
            if(verifyLogin(tokenData.token))
            {
                $("#verified").show();
                $("#not-verified").hide();
                alert("JWT Token: "+tokenData.token);
            }
          }
          else{
            $("#verified").hide();
            $("#not-verified").show();
            alert("Authentication Failed");
            }
          },
          error: function(data ){
            console.log("Something went wrong");
            }
          });
        });
});

function verifyLogin(token)
{
  let result=true;
  //verifyToken by making a service call to /verifyToken with get
  $.ajax({
    url:"/verifyToken",
    type:"POST",
    contentType:"application/json",
    dataType:"json",
    data: JSON.stringify({
    token: token,
    }),
    success: function(data) {
      if(data.login==true)
      {
          result=true;
      }
      else
      {
        result=false;
      }
   },
          error: function(data ){
            console.log("Wrong Token, Not Authenticated.");
            }
          });
    return result;
}
  </script>
<body>
<h2>Sign In</h2>
<form id="loginForm">
  <label for="username">Username:</label><br>
  <input type="text" id="username" name="username"><br>
  <label for="pwd">Password:</label><br>
  <input type="password" id="pwd" name="pwd"><br><br>
  <input type="submit" value="Submit">
</form>
  <h2 id="verified">You are a verified user </h2>
  <h2 id="not-verified">You are not a verified user </h2>
</body>
</html> // Import express for creating API's endpoints
const express = require("express");
const path = require('path');
const fs = require("fs");
const users = require("./database.json");
var database;
var token="wrong key";

// Read database.json file 
fs.readFile("database.json", function(err, data) { 
    
    // Check for errors 
    if (err) throw err; 

    // Converting to JSON 
    database = JSON.parse(data); 
}); 


// Import jwt for API's endpoints authentication
const jwt = require("jsonwebtoken");

// Creates an Express application, initiate
// express top level function
const app = express();

// A port for serving API's
const port = 3000;

// Allow json data
app.use(express.json());

app.get('/',
    (req, res) => {
        res.sendFile(__dirname + '/login.html');
    });

// Login route
app.post("/auth", (req, res) => {
	// Get the name to the json body data
	
	const name = req.body.name;
	console.log(name);

	// Get the password to the json body data
	const password = req.body.password;
	console.log(password)
	// Make two variable for further use
	let isPresent = false;
	let isPresentIndex = null;

	// iterate a loop to the data items and
	// check what data are matched.
	for (let i = 0; i < database.length; i++) {

		// If data name are matched so check
		// the password are correct or not
		if (database[i].name === name
			&& database[i].password === password) {

			// If both are correct so make 
			// isPresent variable true
			isPresent = true;

			// And store the data index
			isPresentIndex = i;

			// Break the loop after matching successfully
			break;
		}
	}

	// If isPresent is true, then create a
	// token and pass to the response
	if (isPresent) {

		// The jwt.sign method are used
		// to create token
		const token = jwt.sign(database[isPresentIndex], "secret");

		// Pass the data or token in response
		res.json({
			login: true,
			token: token,
			data: database[isPresentIndex],
		});
	} else {

		// If isPresent is false return the error
		res.json({
			login: false,
            token: token,
			error: "please check name and password.",
		});
	}
});

// Verify route
app.post("/verifyToken", (req, res) => {

	// Get token value to the json body
	const token = req.body.token;

	// If the token is present
	if (token) {

		// Verify the token using jwt.verify method
		const decode = jwt.verify(token, "secret");

		// Return response with decode data
		res.json({
			login: true,
			data: decode,
		});
	} else {

		// Return response with error
		res.json({
			login: false,
			data: "error",
		});
	}
});

app.post('/login',(req, res) => {
		res.redirect("/login")
		});

// Listen the server
app.listen(port, () => {
	console.log(`Server is running : 
	http://localhost:${port}/`);
});[{"name":"Yamuna","work":"Assistant Professor","password":"abc"},
{"name":"Devi","work":"Assistant Professor","password":"Kiran"},
{"name":"Harika","work":"Assistant Professor","password":"sita"},
{"name":"College", "work":"Institute","password":"cmrit"},
{"name":"CMR", "work":"Education","password":"college"},
{"name":"Sruthi", "work":"Footballer","password":"niraj"}
]
